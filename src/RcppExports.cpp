// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// donut_adjust
DataFrame donut_adjust(DataFrame d, double outer, double inner);
RcppExport SEXP _sdcSpatial_donut_adjust(SEXP dSEXP, SEXP outerSEXP, SEXP innerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type outer(outerSEXP);
    Rcpp::traits::input_parameter< double >::type inner(innerSEXP);
    rcpp_result_gen = Rcpp::wrap(donut_adjust(d, outer, inner));
    return rcpp_result_gen;
END_RCPP
}
// apply_gaussian_filter
NumericMatrix apply_gaussian_filter(NumericMatrix image, double sigma, int nthreads);
RcppExport SEXP _sdcSpatial_apply_gaussian_filter(SEXP imageSEXP, SEXP sigmaSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type image(imageSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(apply_gaussian_filter(image, sigma, nthreads));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sdcSpatial_donut_adjust", (DL_FUNC) &_sdcSpatial_donut_adjust, 3},
    {"_sdcSpatial_apply_gaussian_filter", (DL_FUNC) &_sdcSpatial_apply_gaussian_filter, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_sdcSpatial(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
